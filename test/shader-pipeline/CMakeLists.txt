shady_unit_test(NAME entrypoints_args1 COMPILER slim FILES entrypoint_args1.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME recursion_simple COMPILER slim FILES rec_pow.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME recursion_twofn COMPILER slim FILES rec_pow2.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME restructure_acyclic COMPILER slim FILES restructure1.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME restructure_loop COMPILER slim FILES restructure2.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME math_sqrt COMPILER slim FILES math.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME generic_ptr_cast COMPILER slim FILES generic_ptrs1.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME generic_ptr_load COMPILER slim FILES generic_ptrs2.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
shady_unit_test(NAME subgroup_var_emulation COMPILER slim FILES subgroup_var.slim VALSPV SPV_VAL_ARGS ${SHADY_SPV_VAL_VK_ARGS})
