{
  "prim-ops-classes": [
    {
      "name": "arithmetic"
    },
    {
      "name": "logic"
    },
    {
      "name": "compare"
    },
    {
      "name": "shift"
    },
    {
      "name": "math"
    },
    {
      "name": "mask"
    }
  ],
  "prim-ops": [
    {
      "name": "add",
      "class": "arithmetic"
    },
    {
      "name": "add_carry",
      "class": "arithmetic"
    },
    {
      "name": "sub",
      "class": "arithmetic"
    },
    {
      "name": "sub_borrow",
      "class": "arithmetic"
    },
    {
      "name": "mul",
      "class": "arithmetic"
    },
    {
      "name": "mul_extended",
      "class": "arithmetic"
    },
    {
      "name": "div",
      "class": "arithmetic"
    },
    {
      "name": "fma",
      "class": "arithmetic"
    },
    {
      "name": "mod",
      "class": "arithmetic"
    },
    {
      "name": "neg",
      "class": "arithmetic"
    },
    {
      "name": "not",
      "class": "logic"
    },
    {
      "name": "and",
      "class": "logic"
    },
    {
      "name": "or",
      "class": "logic"
    },
    {
      "name": "xor",
      "class": "logic"
    },
    {
      "name": "gt",
      "class": "compare"
    },
    {
      "name": "gte",
      "class": "compare"
    },
    {
      "name": "lt",
      "class": "compare"
    },
    {
      "name": "lte",
      "class": "compare"
    },
    {
      "name": "eq",
      "class": "compare"
    },
    {
      "name": "neq",
      "class": "compare"
    },
    {
      "name": "rshift_logical",
      "class": "shift"
    },
    {
      "name": "rshift_arithm",
      "class": "shift"
    },
    {
      "name": "lshift",
      "class": "shift"
    },
    {
      "name": "sqrt",
      "class": "math"
    },
    {
      "name": "inv_sqrt",
      "class": "math"
    },
    {
      "name": "pow",
      "class": "math"
    },
    {
      "name": "exp",
      "class": "math"
    },
    {
      "name": "floor",
      "class": "math"
    },
    {
      "name": "ceil",
      "class": "math"
    },
    {
      "name": "round",
      "class": "math"
    },
    {
      "name": "fract",
      "class": "math"
    },
    {
      "name": "min",
      "class": "math"
    },
    {
      "name": "max",
      "class": "math"
    },
    {
      "name": "abs",
      "class": "math"
    },
    {
      "name": "sign",
      "class": "math"
    },
    {
      "name": "sin",
      "class": "math"
    },
    {
      "name": "cos",
      "class": "math"
    },
    {
      "name": "select"
    },
    {
      "name": "shuffle"
    },
    {
      "name": "empty_mask",
      "class": "mask"
    },
    {
      "name": "mask_is_thread_active",
      "class": "mask"
    }
  ],
  "nodes": [
    {
      "name": "PrimOp",
      "class": ["instruction", "value"],
      "ops": [
        { "name": "op", "type": "Op" },
        { "name": "operands", "class": "value", "list": true }
      ]
    },
    {
      "name": "StackAlloc",
      "class": ["instruction", "value", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "type", "class": "type" }
      ]
    },
    {
      "name": "LocalAlloc",
      "class": ["instruction", "value", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "type", "class": "type" }
      ]
    },
    {
      "name": "Load",
      "class": ["instruction", "value", "mem", "access"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "ptr", "class": "value" }
      ]
    },
    {
      "name": "Store",
      "class": ["instruction", "mem", "access"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "ptr", "class": "value" },
        { "name": "value", "class": "value" }
      ]
    },
    {
      "name": "PtrCompositeElement",
      "class": ["instruction", "value"],
      "ops": [
        { "name": "ptr", "class": "value" },
        { "name": "index", "class": "value" }
      ]
    },
    {
      "name": "PtrArrayElementOffset",
      "class": ["instruction", "value"],
      "ops": [
        { "name": "ptr", "class": "value" },
        { "name": "offset", "class": "value" }
      ]
    },
    {
      "name": "CopyBytes",
      "class": ["instruction", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "dst", "class": "value" },
        { "name": "src", "class": "value" },
        { "name": "count", "class": "value" }
      ]
    },
    {
      "name": "FillBytes",
      "class": ["instruction", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "dst", "class": "value" },
        { "name": "src", "class": "value" },
        { "name": "count", "class": "value" }
      ]
    },
    {
      "name": "PushStack",
      "class": ["instruction", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "value", "class": "value" }
      ]
    },
    {
      "name": "PopStack",
      "class": ["instruction", "value", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "type", "class": "type" }
      ]
    },
    {
      "name": "GetStackSize",
      "class": ["instruction", "value", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" }
      ]
    },
    {
      "name": "SetStackSize",
      "class": ["instruction", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "value", "class": "value" }
      ]
    },
    {
      "name": "GetStackBaseAddr",
      "class": ["instruction", "value"],
      "ops": [
        { "name": "mem", "class": "mem" }
      ]
    },
    {
      "name": "DebugPrintf",
      "class": ["instruction", "mem"],
      "ops": [
        { "name": "mem", "class": "mem" },
        { "name": "string", "class": "string" },
        { "name": "args", "class": "value", "list": true }
      ]
    }
  ]
}